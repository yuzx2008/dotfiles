! https://wiki.archlinux.org/index.php/Xterm

! For XTerm(man xterm)

! Specifies how to use luit, an encoding converter between UTF-8 and locale encodings.
xterm*locale: true

! This specifies whether xterm will run in UTF-8 mode.  If you set this resource, xterm also sets the wideChars resource as a side-effect.  The resource can be set via the menu entry “UTF-8 Encoding”.  The default is “default”.
! UTF-8 mode is initially on.  Escape sequences for turning UTF-8 mode on/off are allowed.
xterm*utf8: true

! Specify the pattern for scalable fonts selected from the FreeType library if support for that library was compiled into xterm.  There is no default value.
! fc-list :scalable=true:spacing=mono: family
! DejaVu Sans Mono:style=Book
xterm*faceName: DejaVu Sans Mono:style=Book:antialias=True:pixelsize=12

! Specify a double-width scalable font for cases where an application requires this, e.g., in CJK applications.  There is no default value.
! If the application uses double-wide characters and this resource is not given, xterm will use a scaled version of the font given by faceName.
! WenQuanYi Zen Hei, WenQuanYi Zen Hei Mono, WenQuanYi Zen Hei Sharp, WenQuanYi Zen Micro Hei, WenQuanYi Zen Micro Hei Mono
xterm*faceNameDoublesize: WenQuanYi Zen Hei:style=Regular:antialias=True:pixelsize=12

! Specify the pointsize for fonts selected from the FreeType library if support for that library was compiled into xterm.
! xterm*faceSize: 12

! write a title string encoded in UTF-8. The window manager is responsible for drawing window titles.
xterm*utf8Title: true

! Specifies the name of the normal font.  The default is “fixed”.
! xterm*font: 7x13

! Specifies whether or not the scrollbar should be displayed on the right rather than the left.  The default is “false”.
xterm*rightScrollBar: true

! Specifies the number of lines to save beyond the top of the screen when a scrollbar is turned on.  The default is “64”.
xterm*saveLines: 10240

! Specifies whether or not the scrollbar should be displayed.  The default is “false”.
xterm*scrollBar: true

! Specifies the terminal type name to be set in the TERM environment variable.
xterm*termName: xterm-256color

! Specifies the preferred size and position of the VT102 window.  There is no default for this resource.
! Tip: If the popup menu windows show only as small boxes, it is probably because you have a line similar to this, xterm*geometry: 80x32, in your resources file. This does start xterm in an 80 column by 32 row main window, but it also forces the menu windows to be 80 pixels by 32 pixels! Replace the incorrect line with this
! xterm*vt100.geometry: 80x60
xterm.maximized: true

! Enable bell urgency
xterm*bellIsUrgent: true

! Fix the 'Alt' key
! If you use the Alt key for keyboard shortcuts, you will need this in your resource file:
xterm**metaSendsEscape: true

! Lines of text can sometimes be too close together, or they may appear to be too widely spaced. For one example, using DejaVu Sans Mono, the low underscore glyph may butt against CJK glyphs or the cursor block in the line below. Line spacing, called leading by typographers, can be adjusted using the scaleHeight resource. Here, the line spacing is widened:
xterm*scaleHeight: 1.01

! Xterm has a black border in some cases, you can disable this.
xterm*borderWidth: 0

! Specifies whether or not escape sequences to change colors assigned to different attributes are recognized.
xterm*dynamicColors: true

! Specifies whether to make the cursor blink.  The default is “false”.
xterm*cursorBlink: true

! For URxvt

! Note that when reading X resources, urxvt recognizes two class names: Rxvt and URxvt.
! The class name Rxvt allows resources common to both urxvt and the original rxvt to be easily configured, while the class name URxvt allows resources unique to urxvt,
! 	to be shared between different urxvt configurations. If no resources are specified, suitable defaults will be used.
! Command-line arguments can be used to override resource settings.

! A comma separated list of font names that are checked in order when trying to find glyphs for characters.
! Man for coding, nothing beats the terminus font.. nothing! Also, notice that boldFont, italicFont, and boldItalicFont are specified as well. This makes a huge difference you will notice right away.
URxvt*font: xft:DejaVu Sans Mono:pixelsize=12,xft:WenQuanYi Zen Hei Sharp:style=Regular

! The font list to use for displaying bold, italic or bold italic characters, respectively.
! If specified and non-empty, then the syntax is the same as for the font-resource, and the given font list will be used as
!    is, which makes it possible to substitute completely different font styles for bold and italic.
! If unset (the default), a suitable font list will be synthesized by "morphing" the normal text font list into the desired
!    shape. If that is not possible, replacement fonts of the desired shape will be tried.
!  	 If set, but empty, then this specific style is disabled and the normal text font will being used for the given style.
! URxvt*boldFont: DejaVu Sans Mono:style=Bold:size=12,xft:WenQuanYi Zen Hei Mono
! URxvt*italicFont: xft:DejaVu Sans Mono:style=Oblique:size=12,xft:WenQuanYi Zen Hei Mono
! URxvt*boldItalicFont: xft:DejaVu Sans Mono:style=Bold Oblique:size=12,xft:WenQuanYi Zen Hei Mono

! Compile frills: Amount to adjust the computed character width by to control overall letter spacing. Negative values will
!   tighten up the letter spacing, positive values will space letters out more. Useful to work around odd font metrics;
!   resource letterSpace.
URxvt*letterSpace: -2

! Start as a login shell by prepending a - to argv[0] of the shell. Again, for tmux, this is super-helpful and causes your bash login files like ~/.bash_profile to be loaded.
URxvt*loginShell: true

! Specifies the terminal type name to be set in the TERM environment variable. I use tmux so this is helpful.
URxvt*termName: rxvt-unicode-256color

! Specifies number of lines (pixel height) to insert between each row of the display [default 0]; option -lsp.
URxvt*lineSpace: 0

! True: the mouse wheel scrolls a page full. False: the mouse wheel scrolls five lines [default].
URxvt*mouseWheelScrollPage: true

! Create the window with the specified X window geometry [default 80x24].. base it on your $LINES and $COLUMNS.
! 会造成 ubuntu 下双击两次标题栏来实现最大化
! URxvt*geometry: 100x84

! Use the specified colour for the scrollbar [default #B2B2B2].
URxvt*scrollColor: #777777

! Set scrollbar style to rxvt, plain, next or xterm. plain is the author favourite.
URxvt*scrollstyle: xterm

! Set the scrollbar width in pixels.
URxvt*thickness: 12

! True: scroll to bottom when a non-special key pressed. Special keys are those which are intercepted by rxvt for special handling andnt passed onto the shell
URxvt*scrollTtyKeypress: true

! True: scroll to bottom when tty receives output; option -si.  False: do not scroll to bottom when tty receives output; option +si.
URxvt*scrollTtyOutput: false

! True: scroll with scrollback buffer when tty receives new lines (i.e.  try to show the same lines) and scrollTtyOutput is False; option -sw. False: do not scroll with scrollback buffer when tty receives new lines; option +sw.
! adds some speed.. also, I use tmux scrollback buffers.
URxvt*scrollWithBuffer: false

! Turn on/off secondary screen (default enabled).
URxvt*secondaryScreen: true

! Turn on/off secondary screen scroll (default enabled). If this option is enabled, scrolls on the secondary screen will change the scrollback buffer and, when secondaryScreen is off, switching to/from the secondary screen will instead scroll the screen up.
URxvt*secondaryScroll: true

! For speed. When receiving lots of lines, urxvt will only scroll once in a while (around 60x/sec), resulting in fewer updates. This can result in urxvt not ever displaying some of the lines it receives
URxvt*skipScroll: true

! Disable the scrollbar.. why waste valuable screen real-estate when you should be using tmux scrollback?
URxvt*scrollBar: true

! True: place the scrollbar on the right of the window; option -sr.  False: place the scrollbar on the left of the window; option +sr.
URxvt*scrollBar_right: true

! True: display an rxvt scrollbar without a trough; option -st.  False: display an rxvt scrollbar with a trough; option +st.
URxvt*scrollBar_floating: false

! Fade the text by the given percentage when focus is lost. This is neat, when I switch to a different window, or switch to a different machine ala synergy, it will fade the screen slightly.
URxvt*fading: 30

! True: inhibit writing record into the system log file utmp; option -ut. False: write record into the system log file utmp [default]; option +ut.
URxvt*utmpInhibit: false

! True: set the urgency hint for the wm on receipt of a bell character.  False: do not set the urgency hint [default].
! urxvt resets the urgency hint on every focus change.
URxvt*urgentOnBell: false

! True: use visual bell on receipt of a bell character; option -vb.  False: no visual bell [default]; option +vb.
! Helpful to be used with inputrc and tmux.
URxvt*visualBell: false

! True: de-iconify (map) on receipt of a bell character. False: no de-iconify (map) on receipt of a bell character [default].
URxvt*mapAlert: true

! Use the specified colour as the windows background colour [default White]. Why in the world would you default white unless you are old-school... as in 70s.
! URxvt*background: Black

! Use the specified colour as the windows foreground colour [default Black]. see above.
! URxvt*foreground: White

! Use the specified colour to disp1ay underlined characters when the foreground colour is the default. Makes it easier to notice, rxvt-unicode authors choice as well.
URxvt*colorUL: yellow

! If set, use the specified colour as the colour for the underline itself. If unset, use the foreground colour
URxvt*underlineColor:  yellow

! Save number lines in the scrollback buffer [default 64]. This resource is limited on most machines to 65535. I am a power-user, so I always use a multiplexer. Tmux if its available, otherwise screen. So I use the scrollback buffer in tmux or screen, which is much nicer.
! 鼠标滚轮，Shift+PageUp Shift+PageDown，滚动条
URxvt*saveLines: 65535

! Compile xft: Turn on/off double-buffering for xft (default enabled).  On some card/driver combination enabling it slightly decreases performance, on most it greatly helps it. The slowdown is small, so it should normally be enabled.
URxvt*buffered: true

! Turn on/off hold window after exit support. If enabled, urxvt will not immediately destroy its window when the program executed within it exits. Instead, it will wait till it is being killed or closed by the user.
URxvt*hold: false

! Internal border of number pixels. This resource is limited to 100; option -b.
URxvt*internalBorder:

! Specify a command pipe for vt100 printer [default lpr]. Use Print to initiate a screen dump to the printer and Ctrl-Print or Shift-Print to include the scrollback
URxvt*print-pipe: cat > $HOME/$(echo urxvt.dump.$(date +'%Y%M%d%H%m%S'))

! Comma-separated list(s) of perl extension scripts (default: "default") to use in this terminal instance, blank disables.
! Extension names can be prefixed with a "-" sign to prohibit using them. This can be useful to selectively disable some extensions loaded by default, or specified via the "perl-ext-common" resource. For example, "default,-selection" will use all the default extension except "selection".
! If both of these resources are the empty string, then the perl interpreter will not be initialized.
! The idea behind two options is that perl-ext-common will be used for extensions that should be available to all instances, while perl-ext is used for specific instances.
URxvt*perl-ext-common: default
URxvt*perl-ext: default

! Colon-separated list of additional directories that hold extension scripts. When looking for perl extensions, urxvt will first look in these directories, then in $URXVT_PERL_LIB, $HOME/.urxvt/ext and lastly in /usr/lib/urxvt/perl/.
! URxvt*perl-lib:

! Compile xft: Attempt to find a visual with the given bit depth; option -depth.
URxvt*depth: bitdepth

Xft.autohint: True
Xft.lcdfilter: lcddefault
Xft.render: True
Xft.core: Flase
Xft.dpi: 96
Xft.antialias: True
Xft.rgba: rgb
Xft.hinting: True
Xft.scale: 1.0
Xft.minspace: True

! Hintstyle is the amount of font reshaping done to line up to the grid.
! Hinting values are: hintnone, hintslight, hintmedium, and hintfull.
! hintslight will make the font more fuzzy to line up to the grid but will be better in retaining font shape,
!   while hintfull will be a crisp font that aligns well to the pixel grid but will lose a greater amount of font shape.
!   Preferences vary.
Xft.hintstyle: hintlight

! Solarized color scheme for the X Window System
!
! http://ethanschoonover.com/solarized


! Common

#define S_yellow        #b58900
#define S_orange        #cb4b16
#define S_red           #dc322f
#define S_magenta       #d33682
#define S_violet        #6c71c4
#define S_blue          #268bd2
#define S_cyan          #2aa198
#define S_green         #859900


! Dark

#define S_base03        #002b36
#define S_base02        #073642
#define S_base01        #586e75
#define S_base00        #657b83
#define S_base0         #839496
#define S_base1         #93a1a1
#define S_base2         #eee8d5
#define S_base3         #fdf6e3


! Light

! #define S_base03        #fdf6e3
! #define S_base02        #eee8d5
! #define S_base01        #93a1a1
! #define S_base00        #839496
! #define S_base0         #657b83
! #define S_base1         #586e75
! #define S_base2         #073642
! #define S_base3         #002b36


! To only apply colors to your terminal, for example, prefix
! the color assignment statement with its name. Example:
!
! URxvt*background:            S_base03

*background:              S_base03
*foreground:              S_base0
*fading:                  40
*fadeColor:               S_base03
*cursorColor:             S_base1
*pointerColorBackground:  S_base01
*pointerColorForeground:  S_base1

*color0:                  S_base02
*color1:                  S_red
*color2:                  S_green
*color3:                  S_yellow
*color4:                  S_blue
*color5:                  S_magenta
*color6:                  S_cyan
*color7:                  S_base2
*color9:                  S_orange
*color8:                  S_base03
*color10:                 S_base01
*color11:                 S_base00
*color12:                 S_base0
*color13:                 S_violet
*color14:                 S_base1
*color15:                 S_base3

! copy && paste
*VT100*translations: #override \n\
Shift <KeyPress> Insert:insert-selection(CLIPBOARD, CUT_BUFFER1) \n\
~Shift~Ctrl<Btn2Up>: insert-selection(CLIPBOARD, CUT_BUFFER1) \n\
~Shift<BtnUp>: select-end(CLIPBOARD, CUT_BUFFER1)
