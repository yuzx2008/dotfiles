! https://wiki.archlinux.org/index.php/Xterm

! For XTerm(man xterm)

! Specifies how to use luit, an encoding converter between UTF-8 and locale encodings.
xterm*locale: true

! This specifies whether xterm will run in UTF-8 mode.  If you set this resource, xterm also sets the wideChars resource as a side-effect.  The resource can be set via the menu entry “UTF-8 Encoding”.  The default is “default”.
! UTF-8 mode is initially on.  Escape sequences for turning UTF-8 mode on/off are allowed.
xterm*utf8: true

! Specify the pattern for scalable fonts selected from the FreeType library if support for that library was compiled into xterm.  There is no default value.
! fc-list :scalable=true:spacing=mono: family
! DejaVu Sans Mono:style=Book
xterm*faceName: DejaVu Sans Mono:style=Book:antialias=True:pixelsize=12

! Specify a double-width scalable font for cases where an application requires this, e.g., in CJK applications.  There is no default value.
! If the application uses double-wide characters and this resource is not given, xterm will use a scaled version of the font given by faceName.
! WenQuanYi Zen Hei, WenQuanYi Zen Hei Mono, WenQuanYi Zen Hei Sharp, WenQuanYi Zen Micro Hei, WenQuanYi Zen Micro Hei Mono
xterm*faceNameDoublesize: WenQuanYi Zen Hei:style=Regular:antialias=True:pixelsize=12

! Specify the pointsize for fonts selected from the FreeType library if support for that library was compiled into xterm.
! xterm*faceSize: 12

! write a title string encoded in UTF-8. The window manager is responsible for drawing window titles.
xterm*utf8Title: true

! Specifies the name of the normal font.  The default is “fixed”.
! xterm*font: 7x13
!
! Specifies whether or not the scrollbar should be displayed.  The default is “false”.
xterm*scrollBar: false

! Specifies whether or not the scrollbar should be displayed on the right rather than the left.  The default is “false”.
xterm*rightScrollBar: false

! Specifies the number of lines to save beyond the top of the screen when a scrollbar is turned on.  The default is “64”.
xterm*saveLines: 10240

! Specifies the terminal type name to be set in the TERM environment variable.
xterm*termName: xterm-256color

! Specifies the preferred size and position of the VT102 window.  There is no default for this resource.
! Tip: If the popup menu windows show only as small boxes, it is probably because you have a line similar to this, xterm*geometry: 80x32, in your resources file. This does start xterm in an 80 column by 32 row main window, but it also forces the menu windows to be 80 pixels by 32 pixels! Replace the incorrect line with this
xterm*vt100.geometry: 80x60

! 双屏扩展显示时总是找不到北
! xterm.maximized: true

! Enable bell urgency
xterm*bellIsUrgent: true

! Fix the 'Alt' key
! If you use the Alt key for keyboard shortcuts, you will need this in your resource file:
xterm*eightBitInput: false
xterm*metaSendsEscape: false
xterm*altSendsEscape: false

! Lines of text can sometimes be too close together, or they may appear to be too widely spaced. For one example, using DejaVu Sans Mono, the low underscore glyph may butt against CJK glyphs or the cursor block in the line below. Line spacing, called leading by typographers, can be adjusted using the scaleHeight resource. Here, the line spacing is widened:
xterm*scaleHeight: 1.01

! Xterm has a black border in some cases, you can disable this.
xterm*borderWidth: 0

! Specifies whether or not escape sequences to change colors assigned to different attributes are recognized.
xterm*dynamicColors: true

! Specifies whether to make the cursor blink.  The default is “false”.
xterm*cursorBlink: true

Xft.autohint: True
Xft.lcdfilter: lcddefault
Xft.render: True
Xft.core: Flase
Xft.dpi: 96
Xft.antialias: True
Xft.rgba: rgb
Xft.hinting: True
Xft.scale: 1.0
Xft.minspace: True

! Hintstyle is the amount of font reshaping done to line up to the grid.
! Hinting values are: hintnone, hintslight, hintmedium, and hintfull.
! hintslight will make the font more fuzzy to line up to the grid but will be better in retaining font shape,
!   while hintfull will be a crisp font that aligns well to the pixel grid but will lose a greater amount of font shape.
!   Preferences vary.
Xft.hintstyle: hintlight

! Solarized color scheme for the X Window System
!
! http://ethanschoonover.com/solarized


! Common

#define S_yellow        #b58900
#define S_orange        #cb4b16
#define S_red           #dc322f
#define S_magenta       #d33682
#define S_violet        #6c71c4
#define S_blue          #268bd2
#define S_cyan          #2aa198
#define S_green         #859900


! Dark

#define S_base03        #002b36
#define S_base02        #073642
#define S_base01        #586e75
#define S_base00        #657b83
#define S_base0         #839496
#define S_base1         #93a1a1
#define S_base2         #eee8d5
#define S_base3         #fdf6e3


! Light

! #define S_base03        #fdf6e3
! #define S_base02        #eee8d5
! #define S_base01        #93a1a1
! #define S_base00        #839496
! #define S_base0         #657b83
! #define S_base1         #586e75
! #define S_base2         #073642
! #define S_base3         #002b36


! To only apply colors to your terminal, for example, prefix
! the color assignment statement with its name. Example:
!
! URxvt*background:            S_base03

*background:              S_base03
*foreground:              S_base0
*fading:                  40
*fadeColor:               S_base03
*cursorColor:             S_base1
*pointerColorBackground:  S_base01
*pointerColorForeground:  S_base1

*color0:                  S_base02
*color1:                  S_red
*color2:                  S_green
*color3:                  S_yellow
*color4:                  S_blue
*color5:                  S_magenta
*color6:                  S_cyan
*color7:                  S_base2
*color9:                  S_orange
*color8:                  S_base03
*color10:                 S_base01
*color11:                 S_base00
*color12:                 S_base0
*color13:                 S_violet
*color14:                 S_base1
*color15:                 S_base3

! copy && paste
! Ctrl-M 最大化
! Ctrl-R 恢复
! Ctrl shift C & Ctrl shift V
! Ctrl <KeyPress> P: print()
*VT100*translations: #override \n\
  Shift <KeyPress> Insert:insert-selection(CLIPBOARD, CUT_BUFFER1) \n\
  ~Shift~Ctrl<Btn2Up>: insert-selection(CLIPBOARD, CUT_BUFFER1) \n\
  ~Shift<BtnUp>: select-end(CLIPBOARD, CUT_BUFFER1) \n\
  Ctrl <Key>M: maximize() \n\
  Ctrl <Key>R: restore() \n\
  Ctrl Shift <Key>C: copy-selection(CLIPBOARD) \n\
  Ctrl Shift <Key>V: insert-selection(CLIPBOARD)


