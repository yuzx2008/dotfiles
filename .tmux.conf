
# ctrl+b => ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# split panes using | and -
bind | split-window -h
bind - split-window -v
# unbind %
# unbind '"'

# Start window numbers at 1
set-option -g base-index 1

# The activity highlighting is a bit annoying
setw -g monitor-activity off

# To limit the scrollback buffer to 10000 lines
set-option -g history-limit 10000

# 开启鼠标支持
#set-option -g mouse on

# 默认值（on） window 名字（状态条）会自动根据命令名变化；使用 "C-a ," 重命名
set-option -g allow-rename off

# 设置复制模式键盘布局 vi 或 emacs
set-window-option -g mode-keys vi

# 使用 xterm 的滚动条，可以通过鼠标滚轮滚动，不过是整体窗口移动
# set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

set-option -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION DISPLAY"

# Vim style
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# send-keys 表示发送按键到 copy-mode，v y Y 这些都需要在 copy-mode 下工作，ctrl+[ 进入 copy-mode ]
bind-key -T prefix p paste-buffer
# 使用 xsel，复制 Y，粘帖用 Shift+Insert
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "xsel -ib"
# 针对没有 insert 键的 MacBookPro
bind-key -T prefix v run-shell "xsel -ob | tmux load-buffer - ; tmux paste-buffer"

# see https://gist.github.com/gazoombo/1690258
# I'm a Vim user, this makes navigation easier
unbind-key j
bind-key j select-pane -D # Similar to 'C-w j' to navigate windows in Vim
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# set-option -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# ctrl b D（大写），'source-file' understands '-q' to suppress errors for nonexistent files.
bind V source-file -q ~/.tmux_mylayout1
bind H source-file -q ~/.tmux_mylayout2

set-option -g status on

# disable redraw
set-option -g status-interval 0

# vim esc 回到 normal mode 0 delay
set-option -sg escape-time 0

# set-option -g status-justify "centre"
set -g status-left-length 22

# set -g status-left ""

# show session name, window & pane number, date and time on right side of status bar
set -g status-right-length 80

# set -g status-right ""
# set -g status-right '#[fg=colour136]#(echo $USER)@#H %Y-%m-%d %H:%M'
set -g status-right '#(echo $USER)@#H'

# for neovim, autoread
set-option -g focus-events on

# for neovim, termguicolors
# set-option -sa terminal-overrides ',xterm-256color:RGB'

set-window-option -g bell-action any

# set-window-option -g extended-keys always

set-hook -g client-attached 'run-shell /usr/local/bin/update_display.sh'
