
snippet k-deploy "for k8s deployments app manifest"
# diamond extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${1:app-name}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: $1
  template:
    metadata:
      labels:
        app: $1
    spec:
      imagePullSecrets:
        - name: registry4ad-bdp
      restartPolicy: Always
      tolerations:
        - effect: NoExecute
          key: project
          operator: Equal
          value: ad-bdp
      hostAliases:
        - ip: 10.10.1.103
          hostnames:
            - "face.dev.ad-hadoop.com"
      volumes:
      - name: $1-cm
        configMap:
          name: $1
          items:
            - key: $1_config.py
              path: $1_config.py
      containers:
        - name: $1
          image: registry.sensetime.com/adbdp/go_test:2020.09.01
          imagePullPolicy: IfNotPresent
          command: ['/usr/local/bin/$1']
          args:
            - "-bindAddr=0.0.0.0:11013"
            - "-redisServer=face.dev.ad-hadoop.com:6379"
            - "-redisPasswd=$(REDIS_PASSWD)"
            - "-redisDb=6"
            - "-logFile=/var/log/$1.log"
          resources:
            limits:
              cpu: "0.5"
              memory: 1Gi
            requests:
              cpu: "0.5"
              memory: 1Gi
          ports:
          - containerPort: 11013
            protocol: TCP
          env:
          - name: REDIS_PASSWD
            valueFrom:
              secretKeyRef:
                name: $1-secret
                key: redis-passwd
                optional: false
endsnippet


snippet k-svc "for k8s svc manifest"
apiVersion: v1
kind: Service
metadata:
  name: svc-${1:app-name}
  labels:
    name: svc-$1
spec:
  type: NodePort
  ports:
  - port: 32113
    nodePort: 32113
    targetPort: 11013
    protocol: TCP
  selector:
    app: $1
endsnippet

snippet k-sec "for k8s svc manifest"
apiVersion: v1
data:
  redis-passwd: ${2:TODO}
kind: Secret
metadata:
  name: ${1:app-name}-secret
type: Opaque
endsnippet

